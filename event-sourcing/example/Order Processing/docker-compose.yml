version: '3.4'

services:
    order-write-1:
        image: triad.distribution/order-write
        container_name: order-write-1
        build:
            context: "Order/Write Service/Order Write Core"
            dockerfile: ./Dockerfile
        depends_on:
            - order-eventstore
        ports:
            - 7000:80
        environment:
        - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0 -Dquarkus.http.port=80 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dcassandra.connection.node=order-eventstore -Dcassandra.connection.port=9042 -Dcassandra.connection.dataCentre=datacenter1 -Dcassandra.connection.tableName=event_store.events -Dservice.product.http.url=product-1 -Dmp.messaging.outgoing.stream-order.bootstrap.servers=kafka:9092
    order-read-1:
        image: triad.distribution/order-read
        container_name: order-read-1
        build:
            context: "Order/Read Service/Order Read Core"
            dockerfile: ./Dockerfile
        depends_on:
            - order-eventstore
        ports:
            - 7100:80
        environment:
        - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0 -Dquarkus.http.port=80 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dcassandra.connection.node=order-eventstore -Dcassandra.connection.port=9042 -Dcassandra.connection.dataCentre=datacenter1 -Dcassandra.connection.tableName=event_store.events -Dmp.messaging.incoming.order.bootstrap.servers=kafka:9092
    order-eventstore:
        image: cassandra
        container_name: order-eventstore
    product-1:
        image: triad.distribution/product
        container_name: product-1
        build:
            context: "Product/Product Service/Product Core"
            dockerfile: ./Dockerfile
        ports:
            - 7200:80
        environment:
            - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0 -Dquarkus.http.port=80 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dmp.messaging.incoming.order.bootstrap.servers=kafka:9092
    process-1:
        image: triad.distribution/process
        container_name: process-1
        build:
            context: "Process/Process Service/Process Core"
            dockerfile: ./Dockerfile
        ports:
            - 7300:80
        environment:
            - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0 -Dquarkus.http.port=80 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dservice.product.http.url=product-1 -Dmp.messaging.incoming.order.bootstrap.servers=kafka:9092
    zookeeper:
        image: strimzi/kafka:0.11.3-kafka-2.1.0
        container_name: zookeeper-1
        command: [
          "sh", "-c",
          "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
          - "2181:2181"
        environment:
          LOG_DIR: /tmp/logs

    kafka:
        image: strimzi/kafka:0.11.3-kafka-2.1.0
        container_name: kafka-1
        command: [
          "sh", "-c",
          "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        depends_on:
          - zookeeper
        ports:
          - "9092:9092"
        environment:
          LOG_DIR: "/tmp/logs"
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
